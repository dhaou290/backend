openapi: 3.0.1
info:
  title: backend
  description: My cool app
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Backend
    description: Backend endpoints
  - name: Specification
    description: The swagger API specification
paths:







  /compte:
    get:
      tags:
        - compte
      description: trouver tous les comptes
      responses:
        200:
          description: trouver tous les comptes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Compte'
        4XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - compte
      description: Create a new Compte
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compte'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compte'
        4XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /compte/{id}:
    get:
      tags:
        - compte
      parameters:
        - name: id
          in: path
          description: The id of the Compte to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compte'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'








  /employee:
    get:
      tags:
        - employee
      description: trouver tous les employee
      responses:
        200:
          description: trouver tous les employee
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee'
        4XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - employee
      description: Create a new employee
      requestBody:
        description: an employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        required: true
      responses:
        201:
          description: Return the employee with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        4XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /employee/{id}:
    get:
      tags:
        - employee
      parameters:
        - name: id
          in: path
          description: The id of the employee to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the employee with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /produit:
    get:
      tags:
        - produit
      description: trouver tous les produit
      responses:
        200:
          description: trouver tous les produit
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/produit'
        4XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - produit
      description: Create a new produit
      requestBody:
        description: an produit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/produit'
        required: true
      responses:
        201:
          description: Return the produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produit'
        4XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /produit/{id}:
    get:
      tags:
        - produit
      parameters:
        - name: id
          in: path
          description: The id of the produit to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produit'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /utilisateur:
    get:
      tags:
        - utilisateur
      description: trouver tous les utilisateur
      responses:
        200:
          description: trouver tous les utilisateur
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/utilisateur'
        4XX:
          description: utilisateur not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: utilisateur not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - utilisateur
      description: Create a new utilisateur
      requestBody:
        description: an utilisateur
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utilisateur'
        required: true
      responses:
        201:
          description: Return the utilisateur with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utilisateur'
        4XX:
          description: utilisateur not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: utilisateur not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /utilisateur/{id}:
    get:
      tags:
        - utilisateur
      parameters:
        - name: id
          in: path
          description: The id of the utilisateur to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the utilisateur with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utilisateur'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'







  /magasin:
    get:
      tags:
        - magasin
      description: trouver tous les magasin
      responses:
        200:
          description: trouver tous les magasin
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/magasin'
        4XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - magasin
      description: Create a new magasin
      requestBody:
        description: an magasin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magasin'
        required: true
      responses:
        201:
          description: Return the magasin with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magasin'
        4XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /magasin/{id}:
      get:
        tags:
          - magasin
        parameters:
          - name: id
            in: path
            description: The id of the magasin to retrieve
            required: true
            schema:
              type: integer
        responses:
          200:
            description: Return the magasin with the specified id
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/magasin'
          4XX:
            description: Example not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          5XX:
            description: Example not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'






  /date:
    get:
      tags:
        - date
      description: trouver tous les date
      responses:
        200:
          description: trouver tous les date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/date'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - date
      description: Create a new date
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/date'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /date/{id}:
    get:
      tags:
        - date
      parameters:
        - name: id
          in: path
          description: The id of the date to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the date with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'






  /date_action:
    get:
      tags:
        - date_action
      description: trouver tous les date_action
      responses:
        200:
          description: trouver tous les date_action
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/date_action'
        4XX:
          description: date_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - date_action
      description: Create a new date_action
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/date_action'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date_action'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: date_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /date_action/{id}:
    get:
      tags:
        - date_action
      parameters:
        - name: id
          in: path
          description: The id of the date_action to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the date_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date_action'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'





  /inventaire:
    get:
      tags:
        - inventaire
      description: trouver tous les inventaire
      responses:
        200:
          description: trouver tous les inventaire
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire'
        4XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire
      description: Create a new inventaire
      requestBody:
        description: an inventaire
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire'
        required: true
      responses:
        201:
          description: Return the inventaire with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire'
        4XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire/{id}:
    get:
      tags:
        - inventaire
      parameters:
        - name: id
          in: path
          description: The id of the inventaire to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /inventaire_action:
    get:
      tags:
        - inventaire_action
      description: trouver tous les inventaire_action
      responses:
        200:
          description: trouver tous les inventaire_action
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire_action
      description: Create a new inventaire_action
      requestBody:
        description: an inventaire_action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire_action'
        required: true
      responses:
        201:
          description: Return the inventaire_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire_action/{id}:
    get:
      tags:
        - inventaire_action
      parameters:
        - name: id
          in: path
          description: The id of the inventaire_action to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'





  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}







components:
  schemas:


    Compte:
      type: object
      properties:
        id:
          type: number
          example: 1222
        email:
          type: string
          example: aaaaa@gmail.com
        phone:
          type: string
          example: "+21621556"
        password:
          type: string
          example: a123s1


    employee:
      type: object
      properties:
        id:
          type: number
          example: 1222
        nom:
          type: string
          example: foulen


    produit:
      type: object
      properties:
        id:
          type: number
          example: 8524
        nom:
          type: string
          example: dhaou
        quantite:
          type: number
          example: 521
        codeEAN:
          type: number
          example: 35553
        labelle:
          type: string
          example: labelle
        notre_prix:
          type: number
          example: 9887





    utilisateur:
      type: object
      properties:
        id:
          type: number
          example: 741258
        nom:
          type: string
          example: dhaouu
        prenom:
          type: string
          example: Amri




    magasin:
      type: object
      properties:
        id:
          type: number
          example: 746681
        nom_magasin:
          type: string
          example: aziza
        lieu_magasin:
          type: string
          example: sousse



    date:
      type: object
      properties:
        id:
          type: number
          example: 88888
        heure:
          type: number
          example: 1343
        jour:
          type: number
          example: 31
        mois:
          type: number
          example: 03         
        année:
          type: number
          example: 2022 




    date_action:
      type: object
      properties:
        id:
          type: number
          example: 758412
        heure:
          type: number
          example: 1509
        jour:
          type: number
          example: 01
        mois:
          type: number
          example: 04         
        année:
          type: number
          example: 2021                




    inventaire:
      type: object
      properties:
        id:
          type: number
          example: 746681
        id_inventaire:
          type: number
          example: 741258  



    inventaire_action:
      type: object
      properties:
        id:
          type: number
          example: 852369
        lieu:
          type: string
          example: monastir
        magasin:
          type: string
          example: mg



    historique:
      type: object
      properties:
        id:
          type: number
          example: 014258
        type_inventaire:
          type: string
          example: aaaa
        lieu_inventaire:
          type: string
          example: bbbb
        date_inventer:
          type: number
          example: 2021         
        quantite:
          type: number
          example: 966336

    Error:
      type: object
      additionalProperties: true