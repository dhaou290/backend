openapi: 3.0.1
info:
  title: backend
  description: My cool app
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Backend
    description: Backend endpoints
  - name: Specification
    description: The swagger API specification
paths:







  /compte:
    get:
      tags:
        - compte
      description: trouver tous les comptes
      responses:
        200:
          description: trouver tous les comptes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Compte'
        4XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - compte
      description: Create a new Compte
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compte'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compte'
        4XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /compte/login:
    post:
      tags:
        - compte
      description: Create a new login
      requestBody:
        description: an login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        201:
          description: Return the login with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
        4XX:
          description: login not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: login not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /compte/{id}:
    get:
      tags:
        - compte
      parameters:
        - name: id
          in: path
          description: The id of the Compte to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compte'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'








  /employee:
    get:
      tags:
        - employee
      description: trouver tous les employee
      responses:
        200:
          description: trouver tous les employee
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee'
        4XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - employee
      description: Create a new employee
      requestBody:
        description: an employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        required: true
      responses:
        201:
          description: Return the employee with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        4XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /employee/login:
    post:
      tags:
        - employee
      description: Create a new login
      requestBody:
        description: an login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        201:
          description: Return the login with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
        4XX:
          description: login not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: login not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employee/{id}:
    get:
      tags:
        - employee
      parameters:
        - name: id
          in: path
          description: The id of the employee to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the employee with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /produit:
    get:
      tags:
        - produit
      description: trouver tous les produit
      responses:
        200:
          description: trouver tous les produit
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/produit'
        4XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - produit
      description: Create a new produit
      requestBody:
        description: an produit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/produit'
        required: true
      responses:
        201:
          description: Return the produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produit'
        4XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /produit/{id}:
    get:
      tags:
        - produit
      parameters:
        - name: id
          in: path
          description: The id of the produit to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produit'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'









  /magasin:
    get:
      tags:
        - magasin
      description: trouver tous les magasin
      responses:
        200:
          description: trouver tous les magasin
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/magasin'
        4XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - magasin
      description: Create a new magasin
      requestBody:
        description: an magasin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magasin'
        required: true
      responses:
        201:
          description: Return the magasin with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magasin'
        4XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: magasin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /magasin/{id}:
      get:
        tags:
          - magasin
        parameters:
          - name: id
            in: path
            description: The id of the magasin to retrieve
            required: true
            schema:
              type: integer
        responses:
          200:
            description: Return the magasin with the specified id
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/magasin'
          4XX:
            description: Example not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          5XX:
            description: Example not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'






  /date:
    get:
      tags:
        - date
      description: trouver tous les date
      responses:
        200:
          description: trouver tous les date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/date'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - date
      description: Create a new date
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/date'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /date/{id}:
    get:
      tags:
        - date
      parameters:
        - name: id
          in: path
          description: The id of the date to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the date with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'






  /date_action:
    get:
      tags:
        - date_action
      description: trouver tous les date_action
      responses:
        200:
          description: trouver tous les date_action
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/date_action'
        4XX:
          description: date_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Compte not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - date_action
      description: Create a new date_action
      requestBody:
        description: an Compte
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/date_action'
        required: true
      responses:
        201:
          description: Return the Compte with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date_action'
        4XX:
          description: date not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: date_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /date_action/{id}:
    get:
      tags:
        - date_action
      parameters:
        - name: id
          in: path
          description: The id of the date_action to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the date_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/date_action'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'





  /inventaire:
    get:
      tags:
        - inventaire
      description: trouver tous les inventaire
      responses:
        200:
          description: trouver tous les inventaire
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire'
        4XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire
      description: Create a new inventaire
      requestBody:
        description: an inventaire
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire'
        required: true
      responses:
        201:
          description: Return the inventaire with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire'
        4XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire/{id}:
    get:
      tags:
        - inventaire
      parameters:
        - name: id
          in: path
          description: The id of the inventaire to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /inventaire_action:
    get:
      tags:
        - inventaire_action
      description: trouver tous les inventaire_action
      responses:
        200:
          description: trouver tous les inventaire_action
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire_action
      description: Create a new inventaire_action
      requestBody:
        description: an inventaire_action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire_action'
        required: true
      responses:
        201:
          description: Return the inventaire_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire_action/{id}:
    get:
      tags:
        - inventaire_action
      parameters:
        - name: id
          in: path
          description: The id of the inventaire_action to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire_action with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_action'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'





  /historique:
    get:
      tags:
        - historique
      description: trouver tous les historique
      responses:
        200:
          description: trouver tous les historique
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/historique'
        4XX:
          description: historique not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: historique not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - historique
      description: Create a new historique
      requestBody:
        description: an historique
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/historique'
        required: true
      responses:
        201:
          description: Return the historique with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historique'
        4XX:
          description: historique not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: historique not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /historique/{id}:
    get:
      tags:
        - historique
      parameters:
        - name: id
          in: path
          description: The id of the historique to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the historique with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historique'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'





  /inventaire_produit:
    get:
      tags:
        - inventaire_produit
      description: trouver tous les inventaire_produit
      responses:
        200:
          description: trouver tous les inventaire_produit
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire_produit'
        4XX:
          description: inventaire_produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire_produit
      description: Create a new inventaire_produit
      requestBody:
        description: an inventaire_produit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire_produit'
        required: true
      responses:
        201:
          description: Return the inventaire_produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_produit'
        4XX:
          description: inventaire_produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_produit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire_produit/{id}:
    get:
      tags:
        - inventaire_produit
      parameters:
        - name: id
          in: path
          description: The id of the inventaire_produit to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire_produit with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_produit'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /inventaire_prix:
    get:
      tags:
        - inventaire_prix
      description: trouver tous les inventaire_prix
      responses:
        200:
          description: trouver tous les inventaire_prix
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inventaire_prix'
        4XX:
          description: inventaire_prix not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_prix not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - inventaire_prix
      description: Create a new inventaire_prix
      requestBody:
        description: an inventaire_prix
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventaire_prix'
        required: true
      responses:
        201:
          description: Return the inventaire_prixt with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_prix'
        4XX:
          description: inventaire_prix not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: inventaire_prix not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventaire_prix/{id}:
    get:
      tags:
        - inventaire_prix
      parameters:
        - name: id
          in: path
          description: The id of the inventaire_prix to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the inventaire_prix with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventaire_prix'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}







components:
  schemas:


    Compte:
      type: object
      properties:
        email:
          type: string
          example: aaaaa@gmail.com
        phone:
          type: string
          example: "+21621556"
        password:
          type: string
          exemple: a123s1
        nom:
          type: string
          example: amriii
        prenom:
          type: string
          example: dhaouuu


    login:
      type: object
      properties:
        email:
          type: string
          example: email
        password:
          type: string
          example: mdp          


    employee:
      type: object
      properties:
        nom:
          type: string
          example: foulen


    loginn:
      type: object
      properties:
        email:
          type: string
          example: emaill
        password:
          type: string
          example: mdpp   


    produit:
      type: object
      properties:
        nom:
          type: string
          example: dhaou
        quantite:
          type: number
          example: 521
        codeEAN:
          type: number
          example: 35553
        labelle:
          type: string
          example: labelle
        notre_prix:
          type: number
          example: 9887




    magasin:
      type: object
      properties:
        nom_magasin:
          type: string
          example: aziza
        lieu_magasin:
          type: string
          example: sousse



    date:
      type: object
      properties:
        heure:
          type: number
          example: 1343
        jour:
          type: number
          example: 31
        mois:
          type: number
          example: 03         
        année:
          type: number
          example: 2022 




    date_action:
      type: object
      properties:
        heure:
          type: number
          example: 1509
        jour:
          type: number
          example: 01
        mois:
          type: number
          example: 04         
        année:
          type: number
          example: 2021                




    inventaire:
      type: object
      properties:
        id_inventaire:
          type: number
          example: 741258  



    inventaire_action:
      type: object
      properties:
        lieu:
          type: string
          example: monastir
        magasin:
          type: string
          example: mg



    historique:
      type: object
      properties:
        type_inventaire:
          type: string
          example: aaaa
        lieu_inventaire:
          type: string
          example: bbbb
        date_inventaire:
          type: number
          example: 2021         
        quantite:
          type: number
          example: 966336




    inventaire_produit:
      type: object
      properties:
        date:
          type: string
          example: 09/04/2022
        lieu:
          type: string
          example: 521
        nom_du_produit:
          type: string
          example: aaaaaaaa
        ean:
          type: string
          example: ean
        libelle_du_produit:
          type: string
          example: libellé
        quantite:
          type: string
          example: libellé



    inventaire_prix:
      type: object
      properties:
        date:
          type: string
          example: 09/04/2022
        lieu:
          type: string
          example: 521
        nom_du_produit:
          type: string
          example: aaaaaaaa
        ocr:
          type: string
          example: ocr
        

          

    Error:
      type: object
      additionalProperties: true